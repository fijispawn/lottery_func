#include "imports/stdlib.fc";

global cell participants;

global int total_amount;

const int min_bet = 20000000;

(int, cell) load_data() inline_ref {
    slice ds = get_data().begin_parse();
    return (
        ds~load_uint(32),
        ds~load_ref()
    );
}

() store_data(int total_amount, cell participants) impure inline {
    set_data(
        begin_cell()
            .store_uint(total_amount, 32)
            .store_ref(participants)
        .end_cell()
    );
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice cs = in_msg_full.begin_parse();
    var sender_address = cs~load_msg_addr();

    if (msg_value < min_bet) {
        var return_msg = begin_cell()
            .store_uint(0x18, 6)       
            .store_slice(sender_address)
            .store_grams(msg_value)
            .store_uint(0, 2)
            .end_cell();
        send_raw_message(return_msg, 64);  
        return();
    }

    participants = begin_cell()
        .store_slice(sender_address)
        .store_ref(participants)
        .end_cell();

    total_amount += msg_value;
    store_data(total_amount, participants);
}

int generate_random(int max_value) impure {
    randomize_lt();
    int rand_value = random();
    return rand_value % max_value;
}

() declare_winner() impure {
    slice participants_slice = participants.begin_parse();
    int num_participants = 0;

   while (participants_slice.slice_refs() > 0) {
        participants_slice~load_ref();
        num_participants += 1;
    }

    if (num_participants < 1) {
        return();
    }

    int winner_index = generate_random(num_participants);
    participants_slice = participants.begin_parse();
    slice winner = participants_slice;

    int i = 0;
    while (i <= winner_index) {
        winner = participants_slice~load_msg_addr();
        if (i < winner_index) {
            participants_slice = participants_slice~load_ref().begin_parse();
        }
        i += 1;
    }
    
    int prize = total_amount * 4 / 5;

    var winner_msg = begin_cell()
        .store_uint(0x18, 6)       
        .store_slice(winner)
        .store_grams(prize)
        .store_uint(0, 2)
        .end_cell();
    send_raw_message(winner_msg, 64);

    slice admin_addr = "UQAiqyZu3cjms1eaXAFYvSPjk4AYI9lMYKMZ4sCZSA2NOKMV"a;
    int admin_fee = total_amount - prize;

    var admin_msg = begin_cell()
        .store_uint(0x18, 6)       
        .store_slice(admin_addr)
        .store_grams(admin_fee)
        .store_uint(0, 2)
        .end_cell();
    send_raw_message(admin_msg, 64);

    participants = begin_cell().end_cell();
    total_amount = 0;
    store_data(total_amount, participants);
}

() recv_external(slice in_msg_body) impure {
    declare_winner();
}
